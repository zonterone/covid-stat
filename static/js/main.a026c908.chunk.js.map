{"version":3,"sources":["Footer/Footer.module.css","Header/Header.module.css","Data/Data.module.css","Loader/loader.module.css","Header/Header.js","CountrySelect/CountrySelect.js","helpers/divideNumber.js","Data/Cases/Cases.js","Data/Vaccines/Vaccines.js","Data/Data.js","Loader/Loader.js","Footer/Footer.js","App.js","index.js"],"names":["module","exports","Header","className","style","header","CountrySelect","props","Autocomplete","id","options","data","maxWidth","marginLeft","marginRight","marginTop","onChange","renderInput","params","TextField","label","variant","value","divideNumber","num","toString","replace","Cases","population","dataCases","confirmed","All","percentConfirmed","toFixed","deaths","percentDeaths","Fragment","Vaccines","dataVaccines","partiallyVaccinated","people_partially_vaccinated","percentPartiallyVaccinated","fullyVaccinated","people_vaccinated","percentFullyVaccinated","Data","selectedCountry","dataVaccinated","capitalCity","capital_city","Container","description","Loader","loader","CircularProgress","Footer","footer__container","footer__description","App","url","useState","setLoader","setData","setDataVaccinated","countriesList","setCountriesList","setSelectedCountry","onError","alert","console","log","useEffect","Promise","all","fetch","then","resp","json","arr","key","push","catch","finally","event","newValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a026c908.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer__container\":\"Footer_footer__container__35qCg\",\"footer__description\":\"Footer_footer__description__6FduO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1m9KH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Data_description__1yVlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__3UDNb\"};","import React from \"react\";\n\nimport style from \"./Header.module.css\";\n\nfunction Header() {\n  return <h1 className={style.header}>COVID19-Statistics</h1>;\n}\n\nexport default Header;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core/\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nfunction CountrySelect(props) {\n  return (\n    <Autocomplete\n      id=\"combo-box-demo\"\n      options={props.data}\n      style={{\n        maxWidth: \"400px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"50px\",\n      }}\n      onChange={props.onChange}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Choose country\"\n          variant=\"outlined\"\n          value=\"\"\n        />\n      )}\n    />\n  );\n}\n\nexport default CountrySelect;\n","function divideNumber(num) {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}\n\nexport default divideNumber;\n","import React from \"react\";\n\nimport divideNumber from \"../../helpers/divideNumber\";\n\nfunction Cases(props) {\n  const population = props.population;\n  const dataCases = props.dataCases;\n  const confirmed = dataCases?.All.confirmed;\n  const percentConfirmed = ((confirmed / population) * 100).toFixed(2);\n\n  const deaths = dataCases?.All.deaths;\n  const percentDeaths = ((deaths / population) * 100).toFixed(2);\n\n  if (population) {\n    return (\n      <React.Fragment>\n        <p>\n          Confirmed: {divideNumber(confirmed)} - {percentConfirmed}%\n        </p>\n        <p>\n          Death's: {divideNumber(deaths)} - {percentDeaths}%\n        </p>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <p>Confirmed: {confirmed}</p>\n        <p>Death's: {deaths}</p>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cases;\n","import React from \"react\";\n\nimport divideNumber from \"../../helpers/divideNumber\";\n\nfunction Vaccines(props) {\n  const population = props.population;\n  const dataVaccines = props.dataVaccines;\n  const partiallyVaccinated = dataVaccines?.All.people_partially_vaccinated;\n  const percentPartiallyVaccinated =\n    ((partiallyVaccinated / population) * 100).toFixed(2) + \"%\";\n\n  const fullyVaccinated = dataVaccines?.All.people_vaccinated;\n  const percentFullyVaccinated =\n    ((fullyVaccinated / population) * 100).toFixed(2) + \"%\";\n\n  if (dataVaccines) {\n    return (\n      <React.Fragment>\n        <p>\n          Fully Vaccinated: {divideNumber(fullyVaccinated)}\n          {population ? \" - \" + percentFullyVaccinated : null}\n        </p>\n        <p>\n          Partially Vaccinated: {divideNumber(partiallyVaccinated)}\n          {population ? \" - \" + percentPartiallyVaccinated : null}\n        </p>\n      </React.Fragment>\n    );\n  } else return null;\n}\n\nexport default Vaccines;\n","import { Container } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport Cases from \"./Cases/Cases\";\nimport Vaccines from \"./Vaccines/Vaccines\";\n\nimport divideNumber from \"../helpers/divideNumber\";\n\nimport style from \"./Data.module.css\";\n\nfunction Data(props) {\n  const selectedCountry = props.selectedCountry;\n  const data = props.data[selectedCountry];\n  const dataVaccines = props.dataVaccinated[selectedCountry];\n\n  const capitalCity = data?.All.capital_city || \"No data\";\n  const population = data?.All.population || \"No data\";\n\n  if (data) {\n    return (\n      <Container\n        style={{\n          maxWidth: \"400px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          marginTop: \"50px\",\n        }}\n      >\n        <h2>{selectedCountry}</h2>\n        <p>Capital city: {capitalCity}</p>\n        <p>Population: {divideNumber(population)} </p>\n        <Cases\n          population={population === \"No data\" ? false : population}\n          dataCases={data}\n        ></Cases>\n        <Vaccines\n          population={population === \"No data\" ? false : population}\n          dataVaccines={dataVaccines}\n        ></Vaccines>\n      </Container>\n    );\n  } else\n    return (\n      <p className={style.description}>\n        To&nbsp;see the data start entering the country name or&nbsp;select from\n        the list\n      </p>\n    );\n}\n\nexport default Data;\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nimport style from \"./loader.module.css\";\n\nfunction Loader(params) {\n  return (\n    <div className={style.loader}>\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\n\nimport style from \"./Footer.module.css\";\n\nfunction Footer() {\n  return (\n    <div className={style.footer__container}>\n      <p className={style.footer__description}>Made by ZonterOne</p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { Container } from \"@material-ui/core/\";\n\nimport Header from \"./Header/Header\";\nimport CountrySelect from \"./CountrySelect/CountrySelect\";\nimport Data from \"./Data/Data\";\nimport Loader from \"./Loader/Loader\";\nimport Footer from \"./Footer/Footer\";\n\nfunction App() {\n  const url = \"https://covid-api.mmediagroup.fr/v1/\";\n\n  const [loader, setLoader] = useState(true);\n  const [data, setData] = useState(\"\");\n  const [dataVaccinated, setDataVaccinated] = useState(\"\");\n  const [countriesList, setCountriesList] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n\n  function onError(params) {\n    alert(\"impossible to get data\");\n    console.log(params);\n  }\n\n  useEffect(() => {\n    Promise.all([\n      fetch(url + \"cases\")\n        .then((resp) => resp.json())\n        .then((resp) => {\n          const arr = [];\n          for (const key in resp) {\n            arr.push(key);\n          }\n          setCountriesList(arr);\n          setData(resp);\n        }),\n      fetch(url + \"vaccines\")\n        .then((resp) => resp.json())\n        .then((resp) => {\n          setDataVaccinated(resp);\n        }),\n    ])\n      .catch(onError)\n      .finally(() => setLoader(false));\n  }, []);\n\n  if (loader) {\n    return (\n      <React.Fragment>\n        <Header></Header>\n        <Loader></Loader>\n        <Footer></Footer>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <>\n        <Header></Header>\n        <Container>\n          <CountrySelect\n            data={countriesList}\n            onChange={(event, newValue) => {\n              setSelectedCountry(newValue);\n              console.log(newValue);\n            }}\n          ></CountrySelect>\n          <Data\n            selectedCountry={selectedCountry}\n            data={data}\n            dataVaccinated={dataVaccinated}\n          ></Data>\n        </Container>\n        <Footer></Footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}